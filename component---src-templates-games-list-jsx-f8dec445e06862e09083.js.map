{"version":3,"sources":["webpack:///./src/components/pages/GamesList.jsx","webpack:///./src/templates/games-list.jsx"],"names":["GamesList","games","spacing","as","Link","to","external","href","map","game","i","GamesListGame","key","id","flipped","display","variant","GameBox","width","lineHeight","Screenshot","src","screenshot","title","shortDescription","children","HoverBox","GameBoxGrid","styled","Box","theme","colors","hyperlink","hyperlinkHoverText","space","css","img","attrs","alt","pageContext","PageLayout"],"mappings":"iKAKO,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC3B,OACC,kBAAC,IAAD,CAAOC,QAAS,CAAC,IAChB,kBAAC,IAAD,CAAQC,GAAIC,IAAMC,GAAG,KAArB,UAGA,kBAAC,IAAD,yDACmD,IAClD,kBAAC,IAAD,CAAQC,UAAQ,EAACC,KAAK,+BAAtB,mBAFD,4BAQCN,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACC,EAAD,CAAeC,IAAKH,EAAKI,GAAIJ,KAAMA,EAAMK,QAASJ,EAAI,GAAM,QAMhE,SAASC,EAAT,GAA2C,IAAlBF,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,QAC9B,OACC,kBAAC,IAAD,CACCX,GAAIC,IACJC,GAAE,aAAeI,EAAKI,GACtBE,QAAQ,QACRC,QAAQ,QAER,kBAACC,EAAD,CAASH,QAASA,GACjB,kBAAC,IAAD,CAAKI,MAAO,CAAC,IAAK,KAAM,KAAMC,WAAW,KACxC,kBAACC,EAAD,CAAYF,MAAM,OAAOG,IAAKZ,EAAKa,cAEpC,kBAAC,IAAD,CAAOpB,QAAS,CAAC,IAChB,kBAAC,IAAD,KAAMO,EAAKc,OACX,kBAAC,IAAD,KAAMd,EAAKe,qBAOhB,SAASP,EAAT,GAAyC,IAAtBH,EAAqB,EAArBA,QAASW,EAAY,EAAZA,SAC3B,OACC,kBAACC,EAAD,KACC,kBAACC,EAAD,CAAab,QAASA,GAAUW,IAKnC,IAGMC,EAAWE,YAAOC,KAAV,sEAAGD,CAAH,gRAHC,KACA,MAiBO,qBAAGE,MAAkBC,OAAOC,aACvC,qBAAGF,MAAkBC,OAAOE,sBAQjCN,EAAcC,YAAOC,KAAV,yEAAGD,CAAH,kFAEL,qBAAGE,MAAkBI,MAAM,MAG1B,qBAAGJ,MAAkBI,MAAM,MAErC,qBAAGpB,SAEJqB,YADO,0CAUHf,EAAaQ,IAAOQ,IAAIC,OAAM,iBAAO,CAAEC,IAAK,OAAlC,wEAAGV,CAAH,4D,YChGD,sBAAuC,IAAZ3B,EAAW,EAA1BsC,YAAetC,MACzC,OACC,kBAACuC,EAAA,EAAD,KACC,kBAACxC,EAAD,CAAWC,MAAOA","file":"component---src-templates-games-list-jsx-f8dec445e06862e09083.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\nimport { Box, Stack, Anchor } from '../styled';\n\nexport function GamesList({ games }) {\n\treturn (\n\t\t<Stack spacing={[3]}>\n\t\t\t<Anchor as={Link} to=\"/\">\n\t\t\t\t← Home\n\t\t\t</Anchor>\n\t\t\t<Box>\n\t\t\t\tI‘ve been having a lot of fun building games with{' '}\n\t\t\t\t<Anchor external href=\"https://arcade.makecode.com\">\n\t\t\t\t\tmakecode arcade\n\t\t\t\t</Anchor>\n\t\t\t\t. Here are some of them:\n\t\t\t</Box>\n\n\t\t\t{games.map((game, i) => (\n\t\t\t\t<GamesListGame key={game.id} game={game} flipped={i % 2 !== 0} />\n\t\t\t))}\n\t\t</Stack>\n\t);\n}\n\nfunction GamesListGame({ game, flipped }) {\n\treturn (\n\t\t<Anchor\n\t\t\tas={Link}\n\t\t\tto={`/makecode/${game.id}`}\n\t\t\tdisplay=\"block\"\n\t\t\tvariant=\"bare\"\n\t\t>\n\t\t\t<GameBox flipped={flipped}>\n\t\t\t\t<Box width={[100, null, 160]} lineHeight=\"0\">\n\t\t\t\t\t<Screenshot width=\"100%\" src={game.screenshot} />\n\t\t\t\t</Box>\n\t\t\t\t<Stack spacing={[2]}>\n\t\t\t\t\t<Box>{game.title}</Box>\n\t\t\t\t\t<Box>{game.shortDescription}</Box>\n\t\t\t\t</Stack>\n\t\t\t</GameBox>\n\t\t</Anchor>\n\t);\n}\n\nfunction GameBox({ flipped, children }) {\n\treturn (\n\t\t<HoverBox>\n\t\t\t<GameBoxGrid flipped={flipped}>{children}</GameBoxGrid>\n\t\t</HoverBox>\n\t);\n}\n\nconst scaleX = 1.03;\nconst scaleY = 1.03;\n\nconst HoverBox = styled(Box)`\n\tbackground-color: white;\n\tbox-shadow: 0 2px 2px 1px rgba(0, 0, 0, 0.1);\n\n\ttransition: background-color 0.2s, color 0.2s, transform 0.1s;\n\n\t> * {\n\t\ttransition: transform 0.1s;\n\t}\n\n\ta:hover & {\n\t\ttransform: scale(${scaleX}, ${scaleY});\n\n\t\tbox-shadow: 0 2px 8px 2px rgba(0, 0, 0, 0.4);\n\n\t\tbackground-color: ${({ theme }) => theme.colors.hyperlink};\n\t\tcolor: ${({ theme }) => theme.colors.hyperlinkHoverText};\n\n\t\t> * {\n\t\t\t/* transform: scale(${1 / scaleX}, ${1 / scaleY}); */\n\t\t}\n\t}\n`;\n\nconst GameBoxGrid = styled(Box)`\n\tdisplay: grid;\n\tpadding: ${({ theme }) => theme.space[3]}px;\n\n\tgrid-template-columns: auto 1fr;\n\tgrid-gap: ${({ theme }) => theme.space[3]}px;\n\n\t${({ flipped }) =>\n\t\tflipped &&\n\t\tcss`\n\t\t\tdirection: rtl;\n\n\t\t\t> * {\n\t\t\t\tdirection: ltr;\n\t\t\t}\n\t\t`}\n`;\n\nconst Screenshot = styled.img.attrs(() => ({ alt: '' }))`\n\timage-rendering: pixelated;\n\timage-rendering: crisp-edges;\n`;\n","import React from 'react';\nimport { GamesList } from '../components/pages/GamesList';\nimport { PageLayout } from '../components/layout/PageLayout';\n\nexport default function ({ pageContext: { games } }) {\n\treturn (\n\t\t<PageLayout>\n\t\t\t<GamesList games={games} />\n\t\t</PageLayout>\n\t);\n}\n"],"sourceRoot":""}